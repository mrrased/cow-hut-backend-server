{
  service: 'user-service',
  stringValue: `"{ price: { '$gte': NaN, '$lte': NaN } }"`,
  messageFormat: undefined,
  kind: 'Number',
  value: { price: { '$gte': NaN, '$lte': NaN } },
  path: 'price',
  reason: AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:
  
    assert.ok(!isNaN(val))
  
      at castNumber (E:\Programing Hero\New folder\Cow Hut Backend Server\node_modules\mongoose\lib\cast\number.js:27:10)
      at SchemaNumber.cast (E:\Programing Hero\New folder\Cow Hut Backend Server\node_modules\mongoose\lib\schema\number.js:376:12)
      at SchemaNumber.SchemaType.applySetters (E:\Programing Hero\New folder\Cow Hut Backend Server\node_modules\mongoose\lib\schematype.js:1204:12)
      at SchemaNumber.castForQuery (E:\Programing Hero\New folder\Cow Hut Backend Server\node_modules\mongoose\lib\schema\number.js:430:14)
      at cast (E:\Programing Hero\New folder\Cow Hut Backend Server\node_modules\mongoose\lib\cast.js:339:34)
      at cast (E:\Programing Hero\New folder\Cow Hut Backend Server\node_modules\mongoose\lib\cast.js:71:18)
      at model.Query.Query.cast (E:\Programing Hero\New folder\Cow Hut Backend Server\node_modules\mongoose\lib\query.js:4874:12)
      at model.Query.Query._castConditions (E:\Programing Hero\New folder\Cow Hut Backend Server\node_modules\mongoose\lib\query.js:2210:10)
      at model.Query._find (E:\Programing Hero\New folder\Cow Hut Backend Server\node_modules\mongoose\lib\query.js:2236:8)
      at model.Query.exec (E:\Programing Hero\New folder\Cow Hut Backend Server\node_modules\mongoose\lib\query.js:4404:28) {
    generatedMessage: true,
    code: 'ERR_ASSERTION',
    actual: false,
    expected: true,
    operator: '=='
  },
  valueType: 'Object',
  model: Model { Cow },
  level: 'error',
  message: `GlobalErrorHander Cast to Number failed for value "{ price: { '$gte': NaN, '$lte': NaN } }" (type Object) at path "price" for model "Cow"`,
  stack: `CastError: Cast to Number failed for value "{ price: { '$gte': NaN, '$lte': NaN } }" (type Object) at path "price" for model "Cow"\n` +
    '    at SchemaNumber.cast (E:\\Programing Hero\\New folder\\Cow Hut Backend Server\\node_modules\\mongoose\\lib\\schema\\number.js:378:11)\n' +
    '    at SchemaNumber.SchemaType.applySetters (E:\\Programing Hero\\New folder\\Cow Hut Backend Server\\node_modules\\mongoose\\lib\\schematype.js:1204:12)\n' +
    '    at SchemaNumber.castForQuery (E:\\Programing Hero\\New folder\\Cow Hut Backend Server\\node_modules\\mongoose\\lib\\schema\\number.js:430:14)\n' +
    '    at cast (E:\\Programing Hero\\New folder\\Cow Hut Backend Server\\node_modules\\mongoose\\lib\\cast.js:339:34)\n' +
    '    at cast (E:\\Programing Hero\\New folder\\Cow Hut Backend Server\\node_modules\\mongoose\\lib\\cast.js:71:18)\n' +
    '    at model.Query.Query.cast (E:\\Programing Hero\\New folder\\Cow Hut Backend Server\\node_modules\\mongoose\\lib\\query.js:4874:12)\n' +
    '    at model.Query.Query._castConditions (E:\\Programing Hero\\New folder\\Cow Hut Backend Server\\node_modules\\mongoose\\lib\\query.js:2210:10)\n' +
    '    at model.Query._find (E:\\Programing Hero\\New folder\\Cow Hut Backend Server\\node_modules\\mongoose\\lib\\query.js:2236:8)\n' +
    '    at model.Query.exec (E:\\Programing Hero\\New folder\\Cow Hut Backend Server\\node_modules\\mongoose\\lib\\query.js:4404:28)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'COW',
  timestamp: '2023-06-18T11:40:18.712Z'
}

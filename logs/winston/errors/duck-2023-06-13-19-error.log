{
  service: 'user-service',
  issues: [
    {
      expected: "'Autumn' | 'Summer' | 'Fall'",
      received: 'undefined',
      code: 'invalid_type',
      path: [ 'body', 'title' ],
      message: 'Title is required'
    },
    {
      expected: "'01' | '02' | '03'",
      received: 'undefined',
      code: 'invalid_type',
      path: [ 'body', 'code' ],
      message: 'Required'
    },
    {
      expected: "'January' | 'February' | 'March' | 'April' | 'May' | 'June' | 'July' | 'August' | 'September' | 'October' | 'November' | 'December'",
      received: 'undefined',
      code: 'invalid_type',
      path: [ 'body', 'startMonth' ],
      message: 'Start Month is required'
    },
    {
      expected: "'January' | 'February' | 'March' | 'April' | 'May' | 'June' | 'July' | 'August' | 'September' | 'October' | 'November' | 'December'",
      received: 'undefined',
      code: 'invalid_type',
      path: [ 'body', 'endMonth' ],
      message: 'End month is required'
    }
  ],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)],
  name: 'ZodError',
  level: 'error',
  message: 'GlobalErrorHander [\n' +
    '  {\n' +
    `    "expected": "'Autumn' | 'Summer' | 'Fall'",\n` +
    '    "received": "undefined",\n' +
    '    "code": "invalid_type",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "title"\n' +
    '    ],\n' +
    '    "message": "Title is required"\n' +
    '  },\n' +
    '  {\n' +
    `    "expected": "'01' | '02' | '03'",\n` +
    '    "received": "undefined",\n' +
    '    "code": "invalid_type",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "code"\n' +
    '    ],\n' +
    '    "message": "Required"\n' +
    '  },\n' +
    '  {\n' +
    `    "expected": "'January' | 'February' | 'March' | 'April' | 'May' | 'June' | 'July' | 'August' | 'September' | 'October' | 'November' | 'December'",\n` +
    '    "received": "undefined",\n' +
    '    "code": "invalid_type",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "startMonth"\n' +
    '    ],\n' +
    '    "message": "Start Month is required"\n' +
    '  },\n' +
    '  {\n' +
    `    "expected": "'January' | 'February' | 'March' | 'April' | 'May' | 'June' | 'July' | 'August' | 'September' | 'October' | 'November' | 'December'",\n` +
    '    "received": "undefined",\n' +
    '    "code": "invalid_type",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "endMonth"\n' +
    '    ],\n' +
    '    "message": "End month is required"\n' +
    '  }\n' +
    ']',
  stack: 'ZodError: [\n' +
    '  {\n' +
    `    "expected": "'Autumn' | 'Summer' | 'Fall'",\n` +
    '    "received": "undefined",\n' +
    '    "code": "invalid_type",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "title"\n' +
    '    ],\n' +
    '    "message": "Title is required"\n' +
    '  },\n' +
    '  {\n' +
    `    "expected": "'01' | '02' | '03'",\n` +
    '    "received": "undefined",\n' +
    '    "code": "invalid_type",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "code"\n' +
    '    ],\n' +
    '    "message": "Required"\n' +
    '  },\n' +
    '  {\n' +
    `    "expected": "'January' | 'February' | 'March' | 'April' | 'May' | 'June' | 'July' | 'August' | 'September' | 'October' | 'November' | 'December'",\n` +
    '    "received": "undefined",\n' +
    '    "code": "invalid_type",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "startMonth"\n' +
    '    ],\n' +
    '    "message": "Start Month is required"\n' +
    '  },\n' +
    '  {\n' +
    `    "expected": "'January' | 'February' | 'March' | 'April' | 'May' | 'June' | 'July' | 'August' | 'September' | 'October' | 'November' | 'December'",\n` +
    '    "received": "undefined",\n' +
    '    "code": "invalid_type",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "endMonth"\n' +
    '    ],\n' +
    '    "message": "End month is required"\n' +
    '  }\n' +
    ']\n' +
    '    at Object.get error [as error] (E:\\Programing Hero\\university-management-backend\\node_modules\\zod\\lib\\types.js:43:31)\n' +
    '    at ZodEffects.parseAsync (E:\\Programing Hero\\university-management-backend\\node_modules\\zod\\lib\\types.js:164:22)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'DUCK',
  timestamp: '2023-06-13T13:29:56.108Z'
}
{
  service: 'user-service',
  issues: [
    {
      code: 'custom',
      message: 'Either both title and code should be provide or neither',
      path: []
    }
  ],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)],
  name: 'ZodError',
  level: 'error',
  message: 'GlobalErrorHander [\n' +
    '  {\n' +
    '    "code": "custom",\n' +
    '    "message": "Either both title and code should be provide or neither",\n' +
    '    "path": []\n' +
    '  }\n' +
    ']',
  stack: 'ZodError: [\n' +
    '  {\n' +
    '    "code": "custom",\n' +
    '    "message": "Either both title and code should be provide or neither",\n' +
    '    "path": []\n' +
    '  }\n' +
    ']\n' +
    '    at Object.get error [as error] (E:\\Programing Hero\\university-management-backend\\node_modules\\zod\\lib\\types.js:43:31)\n' +
    '    at ZodEffects.parseAsync (E:\\Programing Hero\\university-management-backend\\node_modules\\zod\\lib\\types.js:164:22)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'DUCK',
  timestamp: '2023-06-13T13:36:33.914Z'
}
{
  service: 'user-service',
  issues: [
    {
      code: 'custom',
      message: 'Either both title and code should be provide or neither',
      path: []
    }
  ],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)],
  name: 'ZodError',
  level: 'error',
  message: 'GlobalErrorHander [\n' +
    '  {\n' +
    '    "code": "custom",\n' +
    '    "message": "Either both title and code should be provide or neither",\n' +
    '    "path": []\n' +
    '  }\n' +
    ']',
  stack: 'ZodError: [\n' +
    '  {\n' +
    '    "code": "custom",\n' +
    '    "message": "Either both title and code should be provide or neither",\n' +
    '    "path": []\n' +
    '  }\n' +
    ']\n' +
    '    at Object.get error [as error] (E:\\Programing Hero\\university-management-backend\\node_modules\\zod\\lib\\types.js:43:31)\n' +
    '    at ZodEffects.parseAsync (E:\\Programing Hero\\university-management-backend\\node_modules\\zod\\lib\\types.js:164:22)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'DUCK',
  timestamp: '2023-06-13T13:41:20.157Z'
}
{
  service: 'user-service',
  statusCode: 400,
  level: 'error',
  message: 'GlobalErrorHander Invalid Semester Code',
  stack: 'Error: Invalid Semester Code\n' +
    '    at E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Service.ts:122:11\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Service.ts:8:71\n' +
    '    at new Promise (<anonymous>)\n' +
    '    at __awaiter (E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Service.ts:4:12)\n' +
    '    at Object.updateSemester (E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Service.ts:116:40)\n' +
    '    at E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Controller.ts:71:50\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Controller.ts:8:71\n' +
    '    at new Promise (<anonymous>)',
  label: 'DUCK',
  timestamp: '2023-06-13T13:41:50.946Z'
}
{
  service: 'user-service',
  statusCode: 400,
  level: 'error',
  message: 'GlobalErrorHander Invalid Semester Code',
  stack: 'Error: Invalid Semester Code\n' +
    '    at E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Service.ts:122:11\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Service.ts:8:71\n' +
    '    at new Promise (<anonymous>)\n' +
    '    at __awaiter (E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Service.ts:4:12)\n' +
    '    at Object.updateSemester (E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Service.ts:116:40)\n' +
    '    at E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Controller.ts:71:50\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Controller.ts:8:71\n' +
    '    at new Promise (<anonymous>)',
  label: 'DUCK',
  timestamp: '2023-06-13T13:42:12.896Z'
}
{
  service: 'user-service',
  issues: [
    {
      code: 'custom',
      message: 'Either both title and code should be provide or neither',
      path: []
    }
  ],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)],
  name: 'ZodError',
  level: 'error',
  message: 'GlobalErrorHander [\n' +
    '  {\n' +
    '    "code": "custom",\n' +
    '    "message": "Either both title and code should be provide or neither",\n' +
    '    "path": []\n' +
    '  }\n' +
    ']',
  stack: 'ZodError: [\n' +
    '  {\n' +
    '    "code": "custom",\n' +
    '    "message": "Either both title and code should be provide or neither",\n' +
    '    "path": []\n' +
    '  }\n' +
    ']\n' +
    '    at Object.get error [as error] (E:\\Programing Hero\\university-management-backend\\node_modules\\zod\\lib\\types.js:43:31)\n' +
    '    at ZodEffects.parseAsync (E:\\Programing Hero\\university-management-backend\\node_modules\\zod\\lib\\types.js:164:22)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'DUCK',
  timestamp: '2023-06-13T13:42:25.066Z'
}
{
  service: 'user-service',
  statusCode: 400,
  level: 'error',
  message: 'GlobalErrorHander Invalid Semester Code',
  stack: 'Error: Invalid Semester Code\n' +
    '    at E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Service.ts:122:11\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Service.ts:8:71\n' +
    '    at new Promise (<anonymous>)\n' +
    '    at __awaiter (E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Service.ts:4:12)\n' +
    '    at Object.updateSemester (E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Service.ts:116:40)\n' +
    '    at E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Controller.ts:71:50\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Controller.ts:8:71\n' +
    '    at new Promise (<anonymous>)',
  label: 'DUCK',
  timestamp: '2023-06-13T13:56:33.361Z'
}
{
  service: 'user-service',
  statusCode: 400,
  level: 'error',
  message: 'GlobalErrorHander Invalid Semester Code',
  stack: 'Error: Invalid Semester Code\n' +
    '    at E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Service.ts:122:11\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Service.ts:8:71\n' +
    '    at new Promise (<anonymous>)\n' +
    '    at __awaiter (E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Service.ts:4:12)\n' +
    '    at Object.updateSemester (E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Service.ts:116:40)\n' +
    '    at E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Controller.ts:70:48\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at E:\\Programing Hero\\university-management-backend\\src\\app\\modules\\academicSemester\\academicSemester.Controller.ts:8:71\n' +
    '    at new Promise (<anonymous>)',
  label: 'DUCK',
  timestamp: '2023-06-13T13:57:18.118Z'
}
